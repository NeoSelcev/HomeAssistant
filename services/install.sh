#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ HA
# –î–ª—è Raspberry Pi 3B+ —Å Debian

set -e

echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Home Assistant..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root"
   exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker >/dev/null 2>&1; then
    ececho "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "ÔøΩ Docker —Å–æ—Å—Ç–æ—è–Ω–∏–µ:"
echo "   ‚îú‚îÄ Docker Engine: –ù–∞—Å—Ç—Ä–æ–µ–Ω —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ª–æ–≥–æ–≤ (10MB√ó7)"
echo "   ‚îú‚îÄ Home Assistant: –ó–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8123"
echo "   ‚îî‚îÄ Node-RED: –ó–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 1880"
echo ""
echo "üìã Logrotate –Ω–∞—Å—Ç—Ä–æ–µ–Ω:"
echo "   ‚îú‚îÄ HA –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è (5-20MB –ª–∏–º–∏—Ç—ã)"
echo "   ‚îú‚îÄ Home Assistant: —Ä–æ—Ç–∞—Ü–∏—è –ø—Ä–∏ 50MB"
echo "   ‚îú‚îÄ Systemd journal: –ª–∏–º–∏—Ç 500MB (–±—ã–ª–æ ${JOURNAL_SIZE_BEFORE:-'–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'})"
echo "   ‚îî‚îÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è: –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 2:00" –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker $SUDO_USER 2>/dev/null || true
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É Docker Compose
if ! command -v docker-compose >/dev/null 2>&1; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
    apt update
    apt install -y docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Docker –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Docker –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è..."
DAEMON_JSON="/etc/docker/daemon.json"

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
if [[ -f "$DAEMON_JSON" ]]; then
    cp "$DAEMON_JSON" "$DAEMON_JSON.backup.$(date +%Y%m%d_%H%M%S)"
    echo "üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cat > "$DAEMON_JSON" << 'EOF'
{
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "10m",
    "max-file": "7"
  }
}
EOF

echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
echo "   ‚îî‚îÄ –õ–∏–º–∏—Ç: 10MB √ó 7 —Ñ–∞–π–ª–æ–≤ = 70MB –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"

# –°–æ–∑–¥–∞–Ω–∏–µ Home Assistant –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ docker-compose
echo "üè† –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Home Assistant..."
HA_DIR="/opt/homeassistant"
mkdir -p "$HA_DIR"

# –ö–æ–ø–∏—Ä—É–µ–º docker-compose.yml –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ
if [[ -f "docker-compose.yml" ]]; then
    cp docker-compose.yml "$HA_DIR/"
    echo "‚úÖ docker-compose.yml —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ $HA_DIR"
else
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π docker-compose.yml
    cat > "$HA_DIR/docker-compose.yml" << 'EOF'
services:
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "7"

  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    ports:
      - "1880:1880"
    volumes:
      - ./nodered:/data
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "7"
EOF
    echo "‚úÖ –ë–∞–∑–æ–≤—ã–π docker-compose.yml —Å–æ–∑–¥–∞–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /etc/ha-watchdog
mkdir -p /var/lib/ha-responder
mkdir -p /usr/local/bin
mkdir -p "$HA_DIR/homeassistant"
mkdir -p "$HA_DIR/nodered"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt update
apt install -y bc curl jq wireless-tools dos2unix htop

# –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã
echo "üìã –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
cp monitoring/ha-watchdog/ha-watchdog.sh /usr/local/bin/ha-watchdog.sh
cp monitoring/ha-failure-notifier/ha-failure-notifier.sh /usr/local/bin/ha-failure-notifier.sh
cp system/nightly-reboot/nightly-reboot.sh /usr/local/bin/nightly-reboot.sh
cp system/update-checker/update-checker.sh /usr/local/bin/update-checker.sh
chmod +x /usr/local/bin/ha-watchdog.sh
chmod +x /usr/local/bin/ha-failure-notifier.sh
chmod +x /usr/local/bin/nightly-reboot.sh
chmod +x /usr/local/bin/update-checker.sh

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if [[ ! -f /etc/ha-watchdog/config ]]; then
    cp monitoring/ha-watchdog/ha-watchdog.conf /etc/ha-watchdog/config
    echo "‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ /etc/ha-watchdog/config"
    echo "üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Telegram —Ç–æ–∫–µ–Ω—ã!"
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫..."
systemctl restart docker
sleep 5

# –ó–∞–ø—É—Å–∫ Home Assistant –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üè† –ó–∞–ø—É—Å–∫ Home Assistant –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
cd "$HA_DIR"
docker-compose up -d
echo "‚úÖ Home Assistant –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å—ã
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ö–æ–ø–∏—Ä—É–µ–º systemd —Ñ–∞–π–ª—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
cp monitoring/ha-watchdog/ha-watchdog.service /etc/systemd/system/
cp monitoring/ha-watchdog/ha-watchdog.timer /etc/systemd/system/
cp monitoring/ha-failure-notifier/ha-failure-notifier.service /etc/systemd/system/
cp monitoring/ha-failure-notifier/ha-failure-notifier.timer /etc/systemd/system/

# –ö–æ–ø–∏—Ä—É–µ–º systemd —Ñ–∞–π–ª—ã —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
cp system/nightly-reboot/nightly-reboot.service /etc/systemd/system/
cp system/nightly-reboot/nightly-reboot.timer /etc/systemd/system/
cp system/update-checker/update-checker.service /etc/systemd/system/
cp system/update-checker/update-checker.timer /etc/systemd/system/

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ª–æ–≥—Ä–æ—Ç–µ–π—Ç–∞
echo "üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ logrotate..."

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π logrotate
mkdir -p /backup/logrotate-$(date +%Y%m%d)
cp -r /etc/logrotate.d/* /backup/logrotate-$(date +%Y%m%d)/ 2>/dev/null || true

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ª–æ–≥–æ–≤ HA –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
cp logrotate/ha-monitoring /etc/logrotate.d/
chmod 644 /etc/logrotate.d/ha-monitoring

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ª–æ–≥–æ–≤ Home Assistant
cp logrotate/homeassistant /etc/logrotate.d/
chmod 644 /etc/logrotate.d/homeassistant

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd journal limits (—Ç–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å >1GB)
echo "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π systemd journal..."
cp /etc/systemd/journald.conf /etc/systemd/journald.conf.backup-$(date +%Y%m%d)
cp logrotate/journald.conf /etc/systemd/journald.conf

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º journald –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
systemctl restart systemd-journald

# –û—á–∏—â–∞–µ–º –±–æ–ª—å—à–∏–µ –∂—É—Ä–Ω–∞–ª—ã
echo "üßπ –û—á–∏—Å—Ç–∫–∞ systemd –∂—É—Ä–Ω–∞–ª–æ–≤..."
JOURNAL_SIZE_BEFORE=$(du -sh /var/log/journal 2>/dev/null | cut -f1 || echo "0")
echo "   –†–∞–∑–º–µ—Ä –¥–æ –æ—á–∏—Å—Ç–∫–∏: $JOURNAL_SIZE_BEFORE"
journalctl --vacuum-size=500M
JOURNAL_SIZE_AFTER=$(du -sh /var/log/journal 2>/dev/null | cut -f1 || echo "0")
echo "   –†–∞–∑–º–µ—Ä –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: $JOURNAL_SIZE_AFTER"

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –±–æ–ª—å—à–∏–µ –ª–æ–≥-—Ñ–∞–π–ª—ã
echo "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è –±–æ–ª—å—à–∏—Ö –ª–æ–≥–æ–≤..."
if [ -f /var/log/ha-failure-notifier.log ]; then
    NOTIFIER_SIZE=$(stat -c%s /var/log/ha-failure-notifier.log 2>/dev/null || echo "0")
    if [ "$NOTIFIER_SIZE" -gt 5242880 ]; then  # 5MB
        echo "   –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º ha-failure-notifier.log ($(($NOTIFIER_SIZE / 1024 / 1024))MB)"
        logrotate -f /etc/logrotate.d/ha-monitoring
    fi
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é logrotate
echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ logrotate..."
logrotate -d /etc/logrotate.d/ha-monitoring >/dev/null 2>&1 && echo "   ‚úÖ HA monitoring: OK" || echo "   ‚ùå HA monitoring: ERROR"
logrotate -d /etc/logrotate.d/homeassistant >/dev/null 2>&1 && echo "   ‚úÖ Home Assistant: OK" || echo "   ‚ùå Home Assistant: ERROR"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π cron –¥–ª—è logrotate (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if ! crontab -l 2>/dev/null | grep -q logrotate; then
    echo "‚è∞ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ logrotate –≤ cron..."
    (crontab -l 2>/dev/null; echo "0 2 * * * /usr/sbin/logrotate /etc/logrotate.conf") | crontab -
    echo "   ‚úÖ Logrotate –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 2:00"
fi

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –≤–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd..."
systemctl daemon-reload
systemctl enable ha-watchdog.timer
systemctl enable ha-failure-notifier.timer
systemctl enable nightly-reboot.timer

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º update-checker –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    # –°–æ–∑–¥–∞–µ–º systemd —Ñ–∞–π–ª—ã –¥–ª—è update-checker (–µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ –ø–∞–ø–∫–∏)
    if [[ ! -f /etc/systemd/system/update-checker.service ]]; then
        cat > /etc/systemd/system/update-checker.service << 'EOF'
[Unit]
Description=System Update Checker
Documentation=man:systemd.service(5)
Wants=network-online.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/usr/local/bin/update-checker.sh
User=root
StandardOutput=journal
StandardError=journal
ConditionLoadAverage=<3.0

[Install]
WantedBy=multi-user.target
EOF
    fi

    if [[ ! -f /etc/systemd/system/update-checker.timer ]]; then
        cat > /etc/systemd/system/update-checker.timer << 'EOF'
[Unit]
Description=Schedule system update check during work hours on weekdays
Documentation=man:systemd.timer(5)
Requires=update-checker.service

[Timer]
OnCalendar=Mon,Tue,Wed,Thu,Fri *-*-* 09:00:00
Persistent=true
AccuracySec=1min
RandomizedDelaySec=30min

[Install]
WantedBy=timers.target
EOF
    fi

    systemctl daemon-reload
    systemctl enable update-checker.timer
    echo "‚úÖ Update checker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Tailscale –µ—Å–ª–∏ –Ω—É–∂–µ–Ω
read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Tailscale VPN? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Tailscale..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Tailscale
    if ! command -v tailscale >/dev/null 2>&1; then
        curl -fsSL https://tailscale.com/install.sh | sh
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    systemctl stop tailscaled tailscale-serve-ha tailscale-funnel-ha 2>/dev/null || true
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    cp tailscale/tailscaled/tailscaled.service /etc/systemd/system/
    cp tailscale/tailscale-serve-ha/tailscale-serve-ha.service /etc/systemd/system/
    cp tailscale/tailscale-funnel-ha/tailscale-funnel-ha.service /etc/systemd/system/
    
    if [[ -f tailscale/tailscaled/tailscaled.default ]]; then
        cp tailscale/tailscaled/tailscaled.default /etc/default/tailscaled
    fi
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
    systemctl daemon-reload
    systemctl enable --now tailscaled tailscale-serve-ha tailscale-funnel-ha
    
    echo "‚úÖ Tailscale —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "üîë –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: tailscale up --hostname=rpi3-$(date +%Y%m%d)"
fi

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
cat > /usr/local/bin/ha-monitoring-control << 'EOF'
#!/bin/bash

case "$1" in
    start)
        systemctl start ha-watchdog.timer
        systemctl start ha-failure-notifier.timer
        systemctl start nightly-reboot.timer
        [[ -f /etc/systemd/system/update-checker.timer ]] && systemctl start update-checker.timer
        [[ -f /etc/systemd/system/tailscaled.service ]] && systemctl start tailscaled
        [[ -f /etc/systemd/system/tailscale-serve-ha.service ]] && systemctl start tailscale-serve-ha
        [[ -f /etc/systemd/system/tailscale-funnel-ha.service ]] && systemctl start tailscale-funnel-ha
        echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
        ;;
    stop)
        systemctl stop ha-watchdog.timer
        systemctl stop ha-failure-notifier.timer
        systemctl stop nightly-reboot.timer
        [[ -f /etc/systemd/system/update-checker.timer ]] && systemctl stop update-checker.timer
        [[ -f /etc/systemd/system/tailscaled.service ]] && systemctl stop tailscaled
        [[ -f /etc/systemd/system/tailscale-serve-ha.service ]] && systemctl stop tailscale-serve-ha
        [[ -f /etc/systemd/system/tailscale-funnel-ha.service ]] && systemctl stop tailscale-funnel-ha
        echo "‚èπÔ∏è –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        ;;
    restart)
        systemctl restart ha-watchdog.timer
        systemctl restart ha-failure-notifier.timer
        systemctl restart nightly-reboot.timer
        [[ -f /etc/systemd/system/update-checker.timer ]] && systemctl restart update-checker.timer
        [[ -f /etc/systemd/system/tailscaled.service ]] && systemctl restart tailscaled
        [[ -f /etc/systemd/system/tailscale-serve-ha.service ]] && systemctl restart tailscale-serve-ha
        [[ -f /etc/systemd/system/tailscale-funnel-ha.service ]] && systemctl restart tailscale-funnel-ha
        echo "üîÑ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
        ;;
    status)
        echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
        echo "--- –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ ---"
        systemctl status ha-watchdog.timer --no-pager -l
        systemctl status ha-failure-notifier.timer --no-pager -l
        echo "--- –°–∏—Å—Ç–µ–º–∞ ---"
        systemctl status nightly-reboot.timer --no-pager -l
        [[ -f /etc/systemd/system/update-checker.timer ]] && systemctl status update-checker.timer --no-pager -l
        echo "--- Tailscale ---"
        [[ -f /etc/systemd/system/tailscaled.service ]] && systemctl status tailscaled --no-pager -l
        [[ -f /etc/systemd/system/tailscale-serve-ha.service ]] && systemctl status tailscale-serve-ha --no-pager -l
        [[ -f /etc/systemd/system/tailscale-funnel-ha.service ]] && systemctl status tailscale-funnel-ha --no-pager -l
        ;;
    logs)
        echo "üìã –õ–æ–≥–∏ watchdog:"
        tail -20 /var/log/ha-watchdog.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo ""
        echo "üìã –õ–æ–≥–∏ failure notifier:"
        tail -20 /var/log/ha-failure-notifier.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo ""
        echo "üìã –õ–æ–≥–∏ —Å–±–æ–µ–≤:"
        tail -20 /var/log/ha-failures.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo ""
        echo "üìã –õ–æ–≥–∏ reboot:"
        tail -10 /var/log/ha-reboot.log 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        ;;
    log-sizes)
        echo "üìä –†–∞–∑–º–µ—Ä—ã –ª–æ–≥–æ–≤:"
        echo "--- –õ–æ–≥–∏ HA –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ---"
        du -sh /var/log/ha-*.log 2>/dev/null | sort -hr || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo "--- Home Assistant –ª–æ–≥–∏ ---"
        du -sh /srv/homeassistant/*.log 2>/dev/null || echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo "--- Systemd journal ---"
        journalctl --disk-usage 2>/dev/null || echo "Journal –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        ;;
    rotate-logs)
        echo "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤..."
        logrotate -f /etc/logrotate.d/ha-monitoring
        logrotate -f /etc/logrotate.d/homeassistant
        echo "‚úÖ –†–æ—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        ;;
    clean-journal)
        echo "üßπ –û—á–∏—Å—Ç–∫–∞ systemd journal..."
        BEFORE=$(journalctl --disk-usage 2>/dev/null | grep -o '[0-9.]*[KMGT]' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        journalctl --vacuum-size=500M
        AFTER=$(journalctl --disk-usage 2>/dev/null | grep -o '[0-9.]*[KMGT]' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        echo "–†–∞–∑–º–µ—Ä –¥–æ: $BEFORE, –ø–æ—Å–ª–µ: $AFTER"
        ;;
    test-telegram)
        source /etc/ha-watchdog/config
        if [[ -n "$TELEGRAM_BOT_TOKEN" ]] && [[ -n "$TELEGRAM_CHAT_ID" ]]; then
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
                -d "chat_id=$TELEGRAM_CHAT_ID" \
                -d "text=üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç [$(hostname)] - –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç!" && \
            echo "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" || \
            echo "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"
        else
            echo "‚ùå Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ /etc/ha-watchdog/config"
        fi
        ;;
    tailscale-status)
        if command -v tailscale >/dev/null 2>&1; then
            echo "üîó –°—Ç–∞—Ç—É—Å Tailscale:"
            tailscale status
        else
            echo "‚ùå Tailscale –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        ;;
    diagnostic)
        if [[ -f /usr/local/bin/system-diagnostic.sh ]]; then
            /usr/local/bin/system-diagnostic.sh
        else
            echo "‚ùå –°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs|log-sizes|rotate-logs|clean-journal|test-telegram|tailscale-status|diagnostic}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∞–º–∏:"
        echo "  log-sizes     - –ø–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã –≤—Å–µ—Ö –ª–æ–≥–æ–≤"
        echo "  rotate-logs   - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤"
        echo "  clean-journal - –æ—á–∏—Å—Ç–∫–∞ systemd journal –¥–æ 500MB"
        exit 1
        ;;
esac
EOF

chmod +x /usr/local/bin/ha-monitoring-control

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
echo "üîç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
cp system-diagnostic.sh /usr/local/bin/system-diagnostic.sh
chmod +x /usr/local/bin/system-diagnostic.sh

echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "ÔøΩ Docker —Å–æ—Å—Ç–æ—è–Ω–∏–µ:"
echo "   ‚îú‚îÄ Docker Engine: –ù–∞—Å—Ç—Ä–æ–µ–Ω —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –ª–æ–≥–æ–≤ (10MB√ó7)"
echo "   ‚îú‚îÄ Home Assistant: –ó–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8123"
echo "   ‚îî‚îÄ Node-RED: –ó–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 1880"
echo ""
echo "ÔøΩüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ /etc/ha-watchdog/config"
echo "2. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω—ã Telegram –±–æ—Ç–∞"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ha-monitoring-control start"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: ha-monitoring-control status"
echo "5. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ Telegram: ha-monitoring-control test-telegram"
echo ""
echo "üîß –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ha-monitoring-control {start|stop|restart|status|logs|test-telegram|tailscale-status|diagnostic}"
echo "   ha-monitoring-control {log-sizes|rotate-logs|clean-journal} - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∞–º–∏"
echo ""
echo "üê≥ Docker –∫–æ–º–∞–Ω–¥—ã:"
echo "   cd /opt/homeassistant && docker-compose ps     - —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "   cd /opt/homeassistant && docker-compose logs   - –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "   cd /opt/homeassistant && docker-compose restart - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo ""
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
echo "   system-diagnostic.sh    - –ø–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
echo ""
echo "üìç –§–∞–π–ª—ã –ª–æ–≥–æ–≤:"
echo "   /var/log/ha-watchdog.log    - –ª–æ–≥ –ø—Ä–æ–≤–µ—Ä–æ–∫"
echo "   /var/log/ha-responder.log   - –ª–æ–≥ –¥–µ–π—Å—Ç–≤–∏–π"
echo "   /var/log/ha-failures.log    - –ª–æ–≥ —Å–±–æ–µ–≤"
echo ""
