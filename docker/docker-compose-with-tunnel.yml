# Home Assistant + Node-RED + Cloudflare Tunnel Deployment
# Smart home monitoring stack with secure public access

services:
  homeassistant:
    container_name: homeassistant
    image: ghcr.io/home-assistant/home-assistant:stable
    volumes:
      - ./homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "7"

  nodered:
    container_name: nodered
    image: nodered/node-red:latest
    ports:
      - "1880:1880"
    volumes:
      - ./nodered:/data
    restart: unless-stopped
    environment:
      - TZ=Asia/Jerusalem
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "7"

  ha-proxy:
    image: nginx:alpine
    container_name: ha-proxy
    restart: unless-stopped
    ports:
      - "8081:8080"  # nginx proxy port (internal)
    volumes:
      - ./nginx-auth/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-auth/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./nginx-auth/html:/usr/share/nginx/html:ro
    depends_on:
      - homeassistant
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared-tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    volumes:
      - ./cloudflared:/etc/cloudflared:ro
    depends_on:
      - ha-proxy
      - test-web
    # Note: cloudflared container has minimal tools, so we disable health check
    # The tunnel status is monitored through system diagnostics and logs

  test-web:
    image: nginx:alpine
    container_name: test-web
    restart: unless-stopped
    ports:
      - "8082:80"  # Test web page
    volumes:
      - ./html:/usr/share/nginx/html:ro
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
